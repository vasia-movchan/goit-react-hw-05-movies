{"version":3,"file":"static/js/779.2a4618f1.chunk.js","mappings":"mRAEaA,EAAcC,EAAAA,GAAAA,GAAH,mEAKXC,EAAcD,EAAAA,GAAAA,GAAH,gD,SC2CxB,EA3CgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBN,GAAW,GAFM,UAGSO,EAAAA,EAAAA,IAAgBJ,GAHzB,gBAGTK,EAHS,EAGTA,QACRV,EAAWU,GAJM,gDAMjBN,EAAS,EAAD,IANS,yBAQjBF,GAAW,GARM,4EAAH,qDAYlBM,GACD,GAAE,CAACH,IAEJ,IAAMM,EAAW,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAASa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC/B,UAAClB,EAAD,YACE,qCAAaiB,MACb,uBAAIC,MAFYF,EADa,IAOjC,OACE,gCACGZ,IAAW,uCACXU,EAAYK,OAAS,GACpB,SAACrB,EAAD,UAAcgB,KAEd,mEAEDR,IAAS,mDAGf,C,mMC5CKc,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCAST,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBL,EAASM,IAAI,uBAD/B,uBACGC,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,yFACkBI,EAASM,IAAT,iBAAuBV,IADzC,uBACGW,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,yFACkBI,EAASM,IAAT,iBAAuBV,EAAvB,aADlB,uBACGW,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACkBX,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CAAES,MAAOD,KAFd,uBACGJ,EADH,EACGA,KADH,kBAKEA,GALF,kEAQA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAA+BI,GAA/B,yFACkBI,EAASM,IAAT,iBAAuBV,EAAvB,aADlB,uBACGW,EADH,EACGA,KADH,kBAGEA,GAHF,kE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  padding-top: 16px;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from '../../services/Api';\n\nimport { ReviewsItem, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  const reviewsList = reviews?.map(({ id, author, content }) => (\n    <ReviewsItem key={id}>\n      <h5>AUTHOR: {author}</h5>\n      <p>{content}</p>\n    </ReviewsItem>\n  ));\n\n  return (\n    <>\n      {loading && <p>... Loading</p>}\n      {reviewsList.length > 0 ? (\n        <ReviewsList>{reviewsList}</ReviewsList>\n      ) : (\n        <p>We dont have any reviews for this movie</p>\n      )}\n      {error && <p>...Movies load failed</p>}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY_API = 'a4fc55630f18a734e904fff92448a44f';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: KEY_API,\n  },\n});\n\nexport async function getTrendingMovies() {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n}\n\nexport async function getSingleMovies(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n}\n\nexport async function getMovies(searchQuery) {\n  const { data } = await instance.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n\n  return data;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n}\n"],"names":["ReviewsList","styled","ReviewsItem","useState","reviews","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchReviews","getMovieReviews","results","reviewsList","map","id","author","content","length","instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSingleMovies","getMovieCredits","getMovies","searchQuery","query"],"sourceRoot":""}