{"version":3,"file":"static/js/862.91461f8a.chunk.js","mappings":"gRAEaA,E,QAAUC,GAAAA,IAAH,kE,SCgDpB,EA3Ca,WACX,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBJ,GAAW,GAFK,UAIUK,EAAAA,EAAAA,MAJV,gBAIRC,EAJQ,EAIRA,QACRR,EAAeQ,GALC,gDAOhBJ,EAAS,EAAD,IAPQ,yBAShBF,GAAW,GATK,4EAAH,qDAajBI,GACD,GAAE,IAEH,IAAMG,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GAEZ,IAAMI,EAAad,EAAYe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACjC,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMT,GAAYU,GAAE,kBAAaJ,GAAhD,SACGC,KAFID,EADwB,IAQnC,OACE,UAACnB,EAAD,YACE,4CACC,wBAAKiB,IACLZ,IAAW,sCACXE,IAAS,mDAGf,C,mMC5CKiB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCAST,SAAejB,IAAtB,4CAAO,OAAP,oBAAO,sGACkBa,EAASK,IAAI,uBAD/B,uBACGC,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,yFACkBK,EAASK,IAAT,iBAAuBV,IADzC,uBACGW,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,yFACkBK,EAASK,IAAT,iBAAuBV,EAAvB,aADlB,uBACGW,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACkBV,EAASK,IAAI,gBAAiB,CACnDF,OAAQ,CAAEQ,MAAOD,KAFd,uBACGJ,EADH,EACGA,KADH,kBAKEA,GALF,kEAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjB,GAA/B,yFACkBK,EAASK,IAAT,iBAAuBV,EAAvB,aADlB,uBACGW,EADH,EACGA,KADH,kBAGEA,GAHF,kE","sources":["components/Home/Home.styled.js","components/Home/Home.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: 1140px;\n  padding: 0 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { getTrendingMovies } from '../../services/Api';\n\nimport { Wrapper } from './Home.styled';\n\nconst Home = () => {\n  const [itemsMovies, setItemsMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n\n        const { results } = await getTrendingMovies();\n        setItemsMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  const location = useLocation();\n  console.log(location);\n\n  const listMovies = itemsMovies.map(({ id, title }) => (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <Wrapper>\n      <h2>Trending today</h2>\n      {<ul>{listMovies}</ul>}\n      {loading && <p>...Loading</p>}\n      {error && <p>...Movies load failed</p>}\n    </Wrapper>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst KEY_API = 'a4fc55630f18a734e904fff92448a44f';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: KEY_API,\n  },\n});\n\nexport async function getTrendingMovies() {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n}\n\nexport async function getSingleMovies(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n}\n\nexport async function getMovies(searchQuery) {\n  const { data } = await instance.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n\n  return data;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n}\n"],"names":["Wrapper","styled","useState","itemsMovies","setItemsMovies","loading","setLoading","error","setError","useEffect","fetchMovies","getTrendingMovies","results","location","useLocation","console","log","listMovies","map","id","title","state","from","to","instance","axios","baseURL","params","api_key","get","data","getSingleMovies","getMovieCredits","getMovies","searchQuery","query","getMovieReviews"],"sourceRoot":""}