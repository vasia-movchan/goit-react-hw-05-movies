{"version":3,"file":"static/js/313.4c47e33b.chunk.js","mappings":"kRAEaA,EAAaC,EAAAA,GAAAA,KAAH,0CAIVC,EAAUD,EAAAA,GAAAA,IAAH,kE,mBCoEpB,EAnEe,WACb,OAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,UAarCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBT,GAAW,GAFK,UAIUU,EAAAA,EAAAA,IAAUJ,GAJpB,gBAIRK,EAJQ,EAIRA,QAERb,EAAea,GANC,gDAQhBT,EAAS,EAAD,IARQ,yBAUhBF,GAAW,GAVK,4EAAH,qDAcbM,GACFG,GAEH,GAAE,CAACH,IAEJ,IAAMM,GAAWC,EAAAA,EAAAA,MAEXC,EAAajB,EAAYkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACjC,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaJ,GAAhD,SACGC,KAFID,EADwB,IAQnC,OACE,UAACvB,EAAD,YACE,UAACF,EAAD,CAAY8B,SAtCK,SAAAC,GACnBA,EAAMC,iBACNlB,EAAgB,CAAEmB,MAAO7B,IACzBC,EAAc,GACf,EAkCG,WACE,kBAAO6B,SA5CQ,SAAAH,GACnB,IAAQI,EAAUJ,EAAMK,OAAhBD,MACR9B,EAAc8B,EACf,EAyCoCA,MAAO/B,EAAYiC,UAAQ,KAC1D,0CAED/B,IAAe,wBAAKiB,IACpBR,GAAsC,IAAvBT,EAAYgC,SAC1B,8DAED9B,IAAW,sCACXE,IAAS,mDAGf,C,mMCpEK6B,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCAST,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBL,EAASvB,IAAI,uBAD/B,uBACG6B,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrB,GAA/B,yFACkBc,EAASvB,IAAT,iBAAuBS,IADzC,uBACGoB,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BtB,GAA/B,yFACkBc,EAASvB,IAAT,iBAAuBS,EAAvB,aADlB,uBACGoB,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAAyBJ,GAAzB,yFACkBwB,EAASvB,IAAI,gBAAiB,CACnD0B,OAAQ,CAAET,MAAOlB,KAFd,uBACG8B,EADH,EACGA,KADH,kBAKEA,GALF,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BvB,GAA/B,yFACkBc,EAASvB,IAAT,iBAAuBS,EAAvB,aADlB,uBACGoB,EADH,EACGA,KADH,kBAGEA,GAHF,kE","sources":["components/Movies/Movies.styled.js","components/Movies/Movies.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  padding: 16px;\n`;\n\nexport const Wrapper = styled.div`\n  max-width: 1140px;\n  padding: 0 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\n\nimport { FormStyled, Wrapper } from './Movies.styled';\n\nimport { getMovies } from '../../services/Api';\n\nconst Movies = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [itemsMovies, setItemsMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  const handleChange = event => {\n    const { value } = event.target;\n    setInputValue(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: inputValue });\n    setInputValue('');\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n\n        const { results } = await getMovies(searchQuery);\n\n        setItemsMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (searchQuery) {\n      fetchMovies();\n    }\n  }, [searchQuery]);\n\n  const location = useLocation();\n\n  const listMovies = itemsMovies.map(({ id, title }) => (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return (\n    <Wrapper>\n      <FormStyled onSubmit={handleSubmit}>\n        <input onChange={handleChange} value={inputValue} required />\n        <button>Search</button>\n      </FormStyled>\n      {itemsMovies && <ul>{listMovies}</ul>}\n      {searchQuery && itemsMovies.length === 0 && (\n        <p>Nothing was found for your request</p>\n      )}\n      {loading && <p>...Loading</p>}\n      {error && <p>...Movies load failed</p>}\n    </Wrapper>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY_API = 'a4fc55630f18a734e904fff92448a44f';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: KEY_API,\n  },\n});\n\nexport async function getTrendingMovies() {\n  const { data } = await instance.get('/trending/movie/day');\n\n  return data;\n}\n\nexport async function getSingleMovies(id) {\n  const { data } = await instance.get(`/movie/${id}`);\n\n  return data;\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n\n  return data;\n}\n\nexport async function getMovies(searchQuery) {\n  const { data } = await instance.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n\n  return data;\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n\n  return data;\n}\n"],"names":["FormStyled","styled","Wrapper","useState","inputValue","setInputValue","itemsMovies","setItemsMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchMovies","getMovies","results","location","useLocation","listMovies","map","id","title","state","from","to","onSubmit","event","preventDefault","query","onChange","value","target","required","length","instance","axios","baseURL","params","api_key","getTrendingMovies","data","getSingleMovies","getMovieCredits","getMovieReviews"],"sourceRoot":""}